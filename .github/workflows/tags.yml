name: release

on:
  push:
    tags:
      - '**'

jobs:
  release:
    name: Test, Build Source, Build & Push Image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: go-redirector
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/ecri-org/go-redirector
          # tag-sha: true
          tag-latest: true
          tag-semver: |
            {{major}}.{{minor}}
            {{major}}.{{minor}}.{{patch}}
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.21.0'
      - name: Setup Vars
        run: |
          echo "BuildVersion=$(cat .version)" >> $GITHUB_ENV
          echo "BuildSha=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV
          echo "BuildDate=$(date '+%Y.%m.%d-%T')" >> $GITHUB_ENV
      - name: Calc coverage
        run: |
          go test --race -covermode=atomic -coverprofile=coverage.out ./...
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov
      - name: Compile
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build \
              -ldflags="-s -w" \
              -ldflags "-X main.BUILD_SHA=BuildSha \
                        -X main.BUILD_VERSION=BuildVersion \
                        -X main.BUILD_DATE=BuildDate" \
              -o dist/linux/$IMAGE_NAME-linux-amd64 main.go
      - name: Show binary version info
        run: dist/linux/$IMAGE_NAME-linux-amd64 -version
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./ci/Dockerfile
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
